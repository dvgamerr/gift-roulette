<div class="container">
	<div class="left-panel">
		<div class="wheel-container" id="wheel"></div>
		<button class="spinner-button" onclick="spinWheel()">
			Spin the Wheel
		</button>
		<div class="name-display" id="nameDisplay">
			<div class="name-display-triangle"></div>
		</div>
	</div>
	<div class="right-panel">
		<div class="friends-list">
			<h2>Friends</h2>
			<div class="add-friend-container">
				<input
					type="text"
					id="newFriend"
					autocomplete="off"
					class="add-friend-input"
					placeholder="Enter friend's name"
				/>
                                <button class="add-friend-button" onclick="addFriend()">
                                        Add
                                </button>
			</div>
			<ul id="friendsList"></ul>
		</div>
		<div class="history">
			<h2>Gift History</h2>
			<ul id="giftHistory"></ul>
		</div>
	</div>
</div>

<style>
	.container {
		display: flex;
		width: 100%;
	}

	.left-panel {
		flex: 2;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		padding: 20px;
	}

	.wheel-container {
		position: relative;
		width: 75vh;
		height: 75vh;
		border-radius: 50%;
		background-color: #eee;
		overflow: hidden;
		margin-bottom: 30px;
		transition: transform 2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
	}

	.wheel-segment {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		clip-path: polygon(50% 50%, 50% 0, 100% 50%);
		transform-origin: 50% 50%;
		display: flex;
		justify-content: center;
		align-items: flex-start;
		padding-top: 10px;
		box-sizing: border-box;
		font-size: 14px;
		font-weight: bold;
		text-align: center;
		user-select: none;
	}

	.wheel-segment:nth-child(odd) {
		background-color: #ddd;
	}

	.wheel-segment:nth-child(even) {
		background-color: #ccc;
	}

	.spinner-button {
		padding: 10px 20px;
		background-color: #007bff;
		color: white;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		font-size: 16px;
	}

	.name-display {
		position: relative;
		width: 150px;
		height: 150px;
		border-radius: 50%;
		display: flex;
		justify-content: center;
		align-items: center;
		font-size: 20px;
		font-weight: bold;
		color: white;
		margin-top: 20px;
		opacity: 0;
		transition: opacity 0.5s ease-in-out;
	}

	.name-display.show {
		opacity: 1;
	}

	.name-display-triangle {
		position: absolute;
		bottom: 0;
		left: 50%;
		width: 0;
		height: 0;
		border-left: 15px solid transparent;
		border-right: 15px solid transparent;
		border-top: 20px solid white;
		transform: translateX(-50%);
	}

	.right-panel {
		flex: 1;
		background-color: #fff;
		padding: 20px;
		border-left: 1px solid #ccc;
		overflow-y: auto;
	}

	.friends-list h2,
	.history h2 {
		margin-top: 0;
	}

	.add-friend-container {
		display: flex;
		margin-bottom: 15px;
	}

	.add-friend-input {
		flex-grow: 1;
		padding: 8px;
		border: 1px solid #ccc;
		border-radius: 5px;
		margin-right: 5px;
	}

	.add-friend-button {
		padding: 8px 12px;
		background-color: #28a745;
		color: white;
		border: none;
		border-radius: 5px;
		cursor: pointer;
	}

	.friend-item {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 5px 0;
		border-bottom: 1px solid #eee;
	}

	.friend-item:last-child {
		border-bottom: none;
	}

	.remove-friend-button {
		background: none;
		border: none;
		color: #dc3545;
		cursor: pointer;
		font-size: 12px;
		margin-left: 10px;
	}

	.history-item {
		padding: 5px 0;
		border-bottom: 1px solid #eee;
	}

	.history-item:last-child {
		border-bottom: none;
	}

	@keyframes spin {
		from {
			transform: rotate(0deg);
		}
		to {
			transform: rotate(360deg);
		}
	}

	.spinning {
		animation: spin 2s steps(100);
	}

	@media (max-width: 768px) {
		.container {
			flex-direction: column;
		}
		.right-panel {
			border-left: none;
			border-top: 1px solid #ccc;
		}
	}
</style>

<script>
  const friends = [];
  const giftHistory = [];
  let spinning = false;

  function updateWheel() {
    const wheel = document.getElementById("wheel");
    wheel.innerHTML = "";
    const numSegments = friends.length;
    if (numSegments === 0) return;
    const angleSlice = 360 / numSegments;
    friends.forEach((friend, index) => {
      const segment = document.createElement("div");
      segment.classList.add("wheel-segment");
      segment.style.transform = `rotate(${index * angleSlice}deg)`;
      segment.style.clipPath = `polygon(50% 50%, 50% 0, ${
        50 + 50 * Math.tan(((angleSlice / 2) * Math.PI) / 180)
      }% 0)`;
      segment.textContent = friend;
      wheel.appendChild(segment);
    });
  }

  function addFriend() {
    const newFriendInput = document.getElementById("newFriend");
    const friendName = newFriendInput.value.trim();
    if (friendName && !friends.includes(friendName)) {
      friends.push(friendName);
      newFriendInput.value = "";
      updateFriendsList();
      updateWheel();
    }
  }

  function removeFriend(index) {
    friends.splice(index, 1);
    updateFriendsList();
    updateWheel();
  }

  function updateFriendsList() {
    const friendsList = document.getElementById("friendsList");
    friendsList.innerHTML = "";
    friends.forEach((friend, index) => {
      const listItem = document.createElement("li");
      listItem.classList.add("friend-item");
      listItem.textContent = friend;
      const removeButton = document.createElement("button");
      removeButton.classList.add("remove-friend-button");
      removeButton.textContent = "x";
      removeButton.onclick = () => removeFriend(index);
      listItem.appendChild(removeButton);
      friendsList.appendChild(listItem);
    });
  }

  function spinWheel() {
    if (spinning || friends.length < 2) return;
    spinning = true;
    const wheel = document.getElementById("wheel");
    wheel.classList.add("spinning");
    const rand = Math.floor(Math.random() * friends.length);
    const deg = 360 * 5 + rand * (360 / friends.length);
    wheel.style.transform = `rotate(${deg}deg)`;

    setTimeout(() => {
      wheel.classList.remove("spinning");
      wheel.style.transform = `rotate(${deg % 360}deg)`;
      showWinner(rand);
      spinning = false;
    }, 2000);
  }

  function showWinner(winnerIndex) {
    const winnerName = friends[winnerIndex];
    displayWinnerName(winnerName);
    animateNameDeletion(winnerIndex);
  }

  function displayWinnerName(name) {
    const nameDisplay = document.getElementById("nameDisplay");
    const pastelColor = getRandomPastelColor();
    nameDisplay.style.backgroundColor = pastelColor;
    nameDisplay.textContent = name;
    nameDisplay.classList.add("show");
    setTimeout(() => {
      nameDisplay.classList.remove("show");
    }, 1500);
  }

  function animateNameDeletion(winnerIndex) {
    if (friends.length <= 1) return;

    const winnerName = friends[winnerIndex];
    const remainingFriends = [...friends];
    remainingFriends.splice(winnerIndex, 1);
    const gifterIndex = Math.floor(Math.random() * remainingFriends.length);
    const gifterName = remainingFriends[gifterIndex];

    giftHistory.push({ gifter: gifterName, receiver: winnerName });
    updateGiftHistory();

    friends.splice(winnerIndex, 1);
    updateFriendsList();
    updateWheel();

    // Reset the displayed name after animation delay
    setTimeout(() => {
      const nameDisplay = document.getElementById("nameDisplay");
      nameDisplay.textContent = "";
      nameDisplay.style.backgroundColor = "";
    }, 2000);
  }

  function updateGiftHistory() {
    const historyList = document.getElementById("giftHistory");
    historyList.innerHTML = "";
    giftHistory.forEach((item) => {
      const historyItem = document.createElement("li");
      historyItem.classList.add("history-item");
      historyItem.textContent = `${item.gifter} gave to ${item.receiver}`;
      historyList.appendChild(historyItem);
    });
  }

  function getRandomPastelColor() {
    const h = 360 * Math.random();
    const s = 25 + 70 * Math.random() + "%";
    const l = 75 + 10 * Math.random() + "%";
    return `hsl(${h},${s},${l})`;
  }

  document
    .getElementById("newFriend")
    .addEventListener("keydown", function (event) {
      if (event.key === "Enter") addFriend();
    });

  updateFriendsList();
  updateWheel();
</script>
