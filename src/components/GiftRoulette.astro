---
import WheelSection from './WheelSection.astro';
import FriendsList from './FriendsList.astro';
import HistoryList from './HistoryList.astro';
---
<div class="flex flex-col md:flex-row w-full">
  <WheelSection />
  <div class="flex-1 bg-white p-5 border-t border-gray-300 md:border-t-0 md:border-l md:border-gray-300 overflow-y-auto">
    <FriendsList />
    <HistoryList />
  </div>
</div>

<style>
.wheel-segment {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform-origin: 50% 50%;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding-top: 10px;
  box-sizing: border-box;
  font-size: 14px;
  font-weight: bold;
  text-align: center;
  user-select: none;
}
.odd\\:bg-gray-300:nth-child(odd){background-color:#d1d5db;}
.even\\:bg-gray-200:nth-child(even){background-color:#e5e7eb;}
@keyframes spin {
  from {transform: rotate(0deg);}
  to {transform: rotate(360deg);}
}
.spinning {
  animation: spin 2s steps(100);
}
</style>

<script>
  const friends = [];
  const giftHistory = [];
  let spinning = false;
  let firstGifter = null;
  let currentGifter = null;

  const getClipPath = (angleSlice) => {
    if (angleSlice >= 360) return "none";
    const rad = (angleSlice / 2) * (Math.PI / 180);
    const x1 = 50 + 50 * Math.sin(rad);
    const y1 = 50 - 50 * Math.cos(rad);
    const x2 = 50 - 50 * Math.sin(rad);
    return `polygon(50% 50%, ${x1}% ${y1}%, ${x2}% ${y1}%)`;
  };

  const updateWheel = () => {
    const wheel = document.getElementById("wheel");
    wheel.innerHTML = "";
    const numSegments = friends.length;
    if (numSegments === 0) return;
    const angleSlice = 360 / numSegments;
    const clip = getClipPath(angleSlice);
    
    for (const [index, friend] of friends.entries()) {
      const segment = document.createElement("div");
      segment.classList.add("wheel-segment", "odd:bg-gray-300", "even:bg-gray-200");
      segment.style.transform = `rotate(${index * angleSlice}deg)`;
      segment.style.clipPath = clip;
      segment.textContent = friend;
      wheel.appendChild(segment);
    }
  };

  const addFriend = () => {
    const newFriendInput = document.getElementById("newFriend");
    const friendName = newFriendInput.value.trim();
    if (friendName && !friends.includes(friendName)) {
      friends.push(friendName);
      newFriendInput.value = "";
      updateFriendsList();
      updateWheel();
    }
  };

  const removeFriend = (index) => {
    friends.splice(index, 1);
    updateFriendsList();
    updateWheel();
  };

  const updateFriendsList = () => {
    const friendsList = document.getElementById("friendsList");
    friendsList.innerHTML = "";
    
    for (const [index, friend] of friends.entries()) {
      const listItem = document.createElement("li");
      listItem.classList.add("flex", "justify-between", "items-center", "py-1", "border-b", "border-gray-200", "last:border-b-0");
      listItem.textContent = friend;
      const removeButton = document.createElement("button");
      removeButton.classList.add("text-red-600", "text-xs", "ml-2");
      removeButton.textContent = "x";
      removeButton.onclick = () => removeFriend(index);
      listItem.appendChild(removeButton);
      friendsList.appendChild(listItem);
    }
  };

  const spinWheel = () => {
    if (spinning || friends.length === 0) return;
    spinning = true;
    const wheel = document.getElementById("wheel");
    wheel.classList.add("spinning");
    const rand = Math.floor(Math.random() * friends.length);
    const deg = 360 * 5 + rand * (360 / friends.length);
    wheel.style.transform = `rotate(${deg}deg)`;

    setTimeout(() => {
      wheel.classList.remove("spinning");
      wheel.style.transform = `rotate(${deg % 360}deg)`;
      showWinner(rand);
      spinning = false;
    }, 2000);
  };

  // const showWinner = (winnerIndex) => {
  //   const winnerName = friends[winnerIndex];
  //   displayWinnerName(winnerName);
  //   processWinner(winnerIndex);
  // };

  // const displayWinnerName = (name) => {
  //   const nameDisplay = document.getElementById("nameDisplay");
  //   const pastelColor = getRandomPastelColor();
  //   nameDisplay.style.backgroundColor = pastelColor;
  //   nameDisplay.textContent = name;
  //   nameDisplay.classList.remove("opacity-0");
  //   nameDisplay.classList.add("opacity-100");
  //   setTimeout(() => {
  //     nameDisplay.classList.remove("opacity-100");
  //     nameDisplay.classList.add("opacity-0");
  //   }, 1500);
  // };

  const processWinner = (index) => {
    const name = friends[index];
    if (currentGifter === null) {
      firstGifter = name;
      currentGifter = name;
      friends.splice(index, 1);
      updateFriendsList();
      updateWheel();
    } else {
      const receiverName = name;
      giftHistory.push({ gifter: currentGifter, receiver: receiverName });
      updateGiftHistory();
      friends.splice(index, 1);
      if (friends.length === 0) {
        giftHistory.push({ gifter: receiverName, receiver: firstGifter });
        updateGiftHistory();
        currentGifter = null;
      } else {
        currentGifter = receiverName;
      }
      updateFriendsList();
      updateWheel();

      setTimeout(() => {
        const nameDisplay = document.getElementById("nameDisplay");
        nameDisplay.textContent = "";
        nameDisplay.style.backgroundColor = "";
      }, 2000);
    }
  };

  const updateGiftHistory = () => {
    const historyList = document.getElementById("giftHistory");
    historyList.innerHTML = "";
    
    for (const item of giftHistory) {
      const historyItem = document.createElement("li");
      historyItem.classList.add("py-1", "border-b", "border-gray-200", "last:border-b-0");
      historyItem.textContent = `${item.gifter} gave to ${item.receiver}`;
      historyList.appendChild(historyItem);
    }
  };

  const getRandomPastelColor = () => {
    const h = 360 * Math.random();
    const s = 25 + 70 * Math.random() + "%";
    const l = 75 + 10 * Math.random() + "%";
    return `hsl(${h},${s},${l})`;
  };

  document.addEventListener('DOMContentLoaded', () => {
    document.getElementById("spinButton").addEventListener("click", spinWheel);
    document.getElementById("addFriendButton").addEventListener("click", addFriend);

    document.getElementById("newFriend").addEventListener("keydown", (event) => {
      if (event.key === "Enter") addFriend();
    });

    updateFriendsList();
    updateWheel();
  });
</script>
